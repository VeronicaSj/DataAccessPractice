/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package classfileej7encodingficherosaccdatveronicasancheznb;

import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author veron
 */
public class MainView extends javax.swing.JFrame {
    
    private ViewElements viewE = new ViewElements(this);
    private FileManager fileMan = new FileManager();
    
    private static File originFile = null;
    private static File destinyDir = null;
    private static String originCharset = null;
    private static String destinyCharset = null;
    private static String destinyFileName = null;
    /**
     * Creates new form MainView
     */
    public MainView() {
        initComponents();
        Test test = new Test();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnSelectInputFile = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        comBoxInputEncoding = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        btnAcept = new javax.swing.JButton();
        btnSelectOutputDir = new javax.swing.JButton();
        txtOutputFileName = new javax.swing.JTextField();
        txtInputFilePath = new javax.swing.JTextField();
        txtOutputFilePath = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        comBoxOutputEncoding = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel1.setText("FICHERO DE ENTRADA");

        btnSelectInputFile.setText("Seleccionar Fichero");
        btnSelectInputFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectInputFileActionPerformed(evt);
            }
        });

        jLabel2.setText("Ruta completa del fichero de entrada:");

        comBoxInputEncoding.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ISO-8859-1", "US-ASCII", "UTF-8", "UTF-16" }));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel3.setText("FICHERO DE SALIDA");

        btnAcept.setText("Convertir");
        btnAcept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptActionPerformed(evt);
            }
        });

        btnSelectOutputDir.setText("Seleccionar Directorio");
        btnSelectOutputDir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectOutputDirActionPerformed(evt);
            }
        });

        txtOutputFileName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtOutputFileNameKeyReleased(evt);
            }
        });

        txtInputFilePath.setEditable(false);
        txtInputFilePath.setText("No seleccionado");

        txtOutputFilePath.setEditable(false);
        txtOutputFilePath.setText("No seleccionado");

        jLabel4.setText("Ruta completa del fichero de salida:");

        comBoxOutputEncoding.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ISO-8859-1", "US-ASCII", "UTF-8", "UTF-16" }));

        jLabel5.setText("Introduce nombre:");

        jLabel6.setText("Busca fichero:");

        jLabel7.setText("Introduce encoding:");

        jLabel8.setText("Busca directorio:");

        jLabel9.setText("Introduce encoding:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(75, 75, 75)))
                        .addGap(272, 272, 272))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnSelectInputFile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(comBoxInputEncoding, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtOutputFileName)
                                    .addComponent(btnSelectOutputDir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(comBoxOutputEncoding, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(95, 95, 95))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtInputFilePath, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtOutputFilePath))
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnAcept, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSelectInputFile)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comBoxInputEncoding, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtInputFilePath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSelectOutputDir)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtOutputFileName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(comBoxOutputEncoding, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtOutputFilePath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAcept)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * funcion que se ejecuta al pulsar el boton <code>btnSelectInputFile</code>. 
     * Muestra un Jfilechooser de archivos y muestra en un textField la 
     * seleccion del usuario
     * @param evt 
     */
    private void btnSelectInputFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectInputFileActionPerformed
        //mostramos filechooser de archivos
        originFile=viewE.chooseFileLocation(JFileChooser.FILES_ONLY, 
                "Introduzca el archivo de origen");
        
        if (originFile != null) {//si se ha seleccionado algo
            //lo mostramos
            txtInputFilePath.setText(originFile.getAbsolutePath());
        }else{//si se ha seleccionado algun boton de exit
            //borramos seleccion
            originFile=null;
            txtInputFilePath.setText("No seleccionado");
        }
    }//GEN-LAST:event_btnSelectInputFileActionPerformed

    /**
     * funcion que se ejecuta al pulsar el boton <code>btnSelectOutputDir/code>.
     * Muestra un JFilechooser de directorios y muestra la 
     * seleccion del usuario en el textField <code>txtOutputFilePath</code>
     * @param evt 
     */
    private void btnSelectOutputDirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectOutputDirActionPerformed
        //mostramos filechooser de directorios
        destinyDir = viewE.chooseFileLocation(JFileChooser.DIRECTORIES_ONLY, 
                "Introduzca el directorio de destino");
        if (destinyDir != null) {//si se ha seleccionado algo
            //lo mostramos
            txtOutputFilePath.setText(destinyDir.getAbsolutePath());
        }else{//si se ha seleccionado algun boton de exit
            //borramos seleccion
            destinyDir=null;
            txtOutputFilePath.setText("No seleccionado");
        }
    }//GEN-LAST:event_btnSelectOutputDirActionPerformed

    /**
     * funcion que se ejecuta al introducir texto en el textField. Edita el 
     * textField <code>destinyFileName</code> de la ruta de destino
     * txtOutputFilePath. 
     * @param evt 
     */
    private void txtOutputFileNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtOutputFileNameKeyReleased
        //si el directorio de salida se ha seleccionado y es un directorio
        if (destinyDir!=null && destinyDir.isDirectory()) {
            //vamos actualizando el filePath de salida
            txtOutputFilePath.setText(destinyDir.getAbsolutePath()
                    +"\\"+txtOutputFileName.getText()+".txt");
            destinyFileName=txtOutputFileName.getText()+".txt";
        }
    }//GEN-LAST:event_txtOutputFileNameKeyReleased

    /**
     * funcion que se ejecuta al pulsar el boton <code>btnAcept</code>. Coìa un 
     * fichero de entrada con el encoding indicado en un nuevo fichero de 
     * salida con el encoding indicado
     * @param evt 
     */
    private void btnAceptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptActionPerformed
        //recogemos los datos del usuario que faltan por recoger, los encodings
        originCharset=comBoxInputEncoding.getSelectedItem().toString();
        destinyCharset=comBoxOutputEncoding.getSelectedItem().toString();
        
        //validamos los datos introducidos por el usuario
        if (validateUserData()) {
            //intentamos crear el archivo
            File finalDestinyDir= new File(destinyDir, destinyFileName);
            if (fileMan.createFile(finalDestinyDir)) {
                //leemos el texto con la codificacion indicada
                String fileContent = fileMan.readFile(originFile, 
                        originCharset);
                if (fileContent!=null) {
                    //escribimos el mismo texto pero recodificado
                    if (fileMan.writeFile(finalDestinyDir,
                            fileContent, 
                            destinyCharset)) {
                        viewE.msg("Su archivo ha sido codificado");
                    }else{
                        viewE.msgError(
                                "Error al escribir el archivo de destino");
                    }
                }else{
                    viewE.msgError("Error al leer el archivo de origen");
                }
            }else{
                viewE.msgError("Error al crear el archivo de destino");
            }
        }
   
    }//GEN-LAST:event_btnAceptActionPerformed

    /**
     * Funcion auxiliar que valida los datos introducidos por el usuario.
     * @return 
     */
    private boolean validateUserData(){
        boolean res=false;
        
        if (originFile!=null) {
            if (originCharset!=null) {
                if (destinyDir!=null) {
                    if (destinyFileName!=null) {
                        if (destinyCharset!=null) {
                            res = true;
                        } else {
                            viewE.msgError("No se ha elegido codificacion "
                                    + "de destino");
                        }
                    }else{
                        viewE.msgError("No se ha introducido nombre de "
                                + "archivo");
                    }
                }else{
                    viewE.msgError("No se ha elegido directorio de destino");
                }
            } else {
                viewE.msgError("No se ha elegido codificacion de origen");
            }
        } else{
            viewE.msgError("No se ha elegido fichero de origen");
        }
        
        return res;
    }
    
    
    
    /* "ISO-8859-1" "US-ASCII" "UTF-8" "UTF-16" */
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAcept;
    private javax.swing.JButton btnSelectInputFile;
    private javax.swing.JButton btnSelectOutputDir;
    private javax.swing.JComboBox<String> comBoxInputEncoding;
    private javax.swing.JComboBox<String> comBoxOutputEncoding;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField txtInputFilePath;
    private javax.swing.JTextField txtOutputFileName;
    private javax.swing.JTextField txtOutputFilePath;
    // End of variables declaration//GEN-END:variables
}
